#BlueJ class context
comment0.target=Empleado
comment1.params=p_cuil\ p_apellido\ p_nombre\ p_importe\ p_anio
comment1.target=Empleado(long,\ java.lang.String,\ java.lang.String,\ double,\ int)
comment1.text=\n\ Constructor\ con\ parametros,\ instancia\ un\ objeto\ de\ la\ clase.\n\ @param\ p_cuil\n\ @param\ p_apellido\n\ @param\ p_nombre\n\ @param\ p_importe\n\ @param\ p_anio\n
comment10.params=
comment10.target=double\ getSueldoBasico()
comment10.text=\ \n\ Accesor\ Getter,\ permite\ obtener\ el\ estado\ del\ atributo\ sueldoBasico.\n\ @return\ retorna\ un\ tipo\ de\ dato\ coma\ flotante\ de\ doble\ precisi\u00F3n.\n
comment11.params=
comment11.target=int\ getAnioIngreso()
comment11.text=\ \n\ Accesor\ Getter,\ permite\ obtener\ el\ estado\ del\ atributo\ anioIngreso.\n\ @return\ retorna\ un\ tipo\ de\ dato\ entero.\n
comment12.params=
comment12.target=int\ antiguedad()
comment12.text=\n\ M\u00E9todo\ publico,\ instancia\ un\ objeto\ de\ tipo\ Calendar\ el\ cual\ se\ utiliza\ para\ asignar\ a\ la\ variable,\ \n\ local\ (temporal)\ al\ m\u00E9todo,\ anioHoy\ el\ a\u00F1o\ actual,\ luego\ se\ utiliza\ el\ m\u00E9todo\ getAnio\ para\ calcular\ \n\ la\ antiguedad\ restando\ el\ a\u00F1o\ actual\ con\ el\ a\u00F1o\ de\ Ingreso.\n\ @return\ retorna\ un\ tipo\ de\ dato\ entero.\n
comment13.params=
comment13.target=double\ descuento()
comment13.text=\n\ M\u00E9todo\ privado,\ utiliza\ el\ m\u00E9todo\ getSueldo\ para\ calcular\ el\ descuento\ que\ se\ debe\ aplicar.\n\ C\u00E1lculo\ del\ descuento\ \=\ %2\ del\ sueldo\ basico\ m\u00E1s\ $1500.\n\ @return\ retorna\ un\ tipo\ de\ dato\ coma\ flotante\ de\ doble\ precisi\u00F3n.\n
comment14.params=
comment14.target=double\ adicional()
comment14.text=\n\ M\u00E9todo\ privado,\ utiliza\ los\ m\u00E9todos\ antiguedad\ y\ getSueldo\ para\ calcular\ el\ adicional\ que\ se\ debe\ \n\ aplicar\ en\ base\ a\ su\ antig\u00FCedad.\n\ C\u00E1lculo\ del\ adicional\=Si\ antig\u00FCedad\ es\ menor\ a\ 2\ a\u00F1os\ corresponde\ 2%\ respecto\ al\ sueldo\ basico.\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Si\ antig\u00FCedad\ es\ mayor\ o\ igual\ a\ 2\ a\u00F1os\ pero\ menor\ a\ 10\ a\u00F1os\ corresponde\ 4%\ respecto\ al\ sueldo\ basico.\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Si\ antig\u00FCedad\ es\ mayor\ o\ igual\ a\ 10\ a\u00F1os\ corresponde\ 6%\ respecto\ al\ sueldo\ basico.\n\ @return\ retorna\ un\ tipo\ de\ dato\ coma\ flotante\ de\ doble\ precisi\u00F3n.\n
comment15.params=
comment15.target=double\ sueldoNeto()
comment15.text=\n\ M\u00E9todo\ publico,\ utiliza\ los\ m\u00E9todos\ getSueldo,\ adicional\ y\ descuento\ para\ \ calcular\ \n\ el\ sueldo\ neto,\ sumando\ el\ adicional\ al\ sueldo\ basico\ menos\ los\ descuentos.\n\ @return\ retorna\ un\ tipo\ de\ dato\ coma\ flotante\ de\ doble\ precisi\u00F3n.\n
comment16.params=
comment16.target=java.lang.String\ nomYApe()
comment16.text=\n\ M\u00E9todo\ publico,\ utiliza\ los\ m\u00E9todos\ getNombre\ y\ getApellido\ para\ formar\ una\ \u00FAnica\ cadena\ de\ texto\ \n\ concatenando\ los\ atributos\ nombre\ y\ apellido.\n\ @return\ retorna\ un\ objeto\ de\ tipo\ String.\n
comment17.params=
comment17.target=java.lang.String\ apeYNom()
comment17.text=\n\ M\u00E9todo\ publico,\ utiliza\ los\ m\u00E9todos\ getApellido\ y\ getNombre\ para\ formar\ una\ \u00FAnica\ cadena\ de\ texto\ \n\ concatenando\ los\ atributos\ apellido\ y\ nombre.\n\ @return\ retorna\ un\ objeto\ de\ tipo\ String.\n
comment18.params=
comment18.target=void\ mostrar()
comment18.text=\n\ M\u00E9todo\ publico,\ utiliza\ el\ m\u00E9todo\ nomYApe\ para\ formar\ una\ cadena\ de\ texto\ con\ su\ respectiva\ \n\ descripci\u00F3n\ junto\ al\ estado\ del\ objeto.\ \n\ Utiliza\ los\ m\u00E9todos\ getCUIL\ y\ antig\u00FCedad\ para\ formar\ una\ cadena\ de\ texto\ con\ sus\ respectivas\ descripciones\ \n\ junto\ a\ los\ estados\ de\ los\ objetos.\ \n\ Utiliza\ el\ m\u00E9todo\ sueldoNeto\ para\ formar\ una\ cadena\ de\ texto\ con\ su\ respectiva\ descripci\u00F3n\ junto\ al\ \n\ estado\ del\ objeto,\ se\ instancia\ un\ objeto\ de\ tipo\ DecimalFormat\ el\ cual\ se\ utiliza\ para\ darle\ formato\ de\ dos\ \n\ decimales\ al\ m\u00E9todo\ sueldoNeto.\ \n\ Emplea\ 3\ System.out.println\ para\ visualizar\ por\ consola\ las\ tres\ cadenas\ de\ texto.\n
comment19.params=
comment19.target=java.lang.String\ mostrarLinea()
comment19.text=\n\ M\u00E9todo\ publico,\ utiliza\ los\ m\u00E9todos\ getCUIL,\ getApellido\ y\ getNombre\ para\ formar\ una\ \u00FAnica\ cadena\ de\ texto\ \n\ concatenando\ los\ atributos\ cuil,\ apellido,\ nombre.\ Adem\u00E1s\ se\ emplea\ el\ m\u00E9todo\ sueldoNeto,\ se\ instancia\ un\ \n\ objeto\ de\ tipo\ DecimalFormat\ el\ cual\ se\ utiliza\ para\ darle\ formato\ de\ dos\ decimales\ a\ dicho\ m\u00E9todo.\n\ @return\ retorna\ un\ objeto\ de\ tipo\ String.\n
comment2.params=p_cuil
comment2.target=void\ setCuil(long)
comment2.text=\n\ Mutador\ Setter,\ recibe\ un\ tipo\ de\ dato\ long\ y\ permite\ modificar\ el\ estado\ del\ atributo\ cuil.\ \n\ @param\ p_cuil\n
comment3.params=p_apellido
comment3.target=void\ setApellido(java.lang.String)
comment3.text=\n\ Mutador\ Setter,\ recibe\ un\ objeto\ de\ tipo\ String\ y\ permite\ modificar\ el\ estado\ del\ atributo\ apellido.\n\ @param\ p_apellido\n
comment4.params=p_nombre
comment4.target=void\ setNombre(java.lang.String)
comment4.text=\n\ Mutador\ Setter,\ recibe\ un\ objeto\ de\ tipo\ String\ y\ permite\ modificar\ el\ estado\ del\ atributo\ nombre.\n\ @param\ p_nombre\n
comment5.params=p_importe
comment5.target=void\ setSueldoBasico(double)
comment5.text=\n\ Mutador\ Setter,\ recibe\ un\ objeto\ de\ tipo\ coma\ flotante\ de\ doble\ precisi\u00F3n\ y\ permite\ modificar\ el\ estado\ \n\ del\ atributo\ sueldoBasico.\n\ @param\ p_importe\n
comment6.params=p_anio
comment6.target=void\ setAnioIngreso(int)
comment6.text=\n\ Mutador\ Setter,\ recibe\ un\ tipo\ de\ dato\ entero\ y\ permite\ modificar\ el\ estado\ del\ atributo\ anioIngreso.\ \n\ @param\ p_anio\n
comment7.params=
comment7.target=long\ getCuil()
comment7.text=\ \n\ Accesor\ Getter,\ permite\ obtener\ el\ estado\ del\ atributo\ cuil.\n\ @return\ retorna\ un\ tipo\ de\ dato\ long.\n
comment8.params=
comment8.target=java.lang.String\ getApellido()
comment8.text=\ \n\ Accesor\ Getter,\ permite\ obtener\ el\ estado\ del\ atributo\ apellido.\n\ @return\ retorna\ un\ objeto\ de\ tipo\ String.\n
comment9.params=
comment9.target=java.lang.String\ getNombre()
comment9.text=\ \n\ Accesor\ Getter,\ permite\ obtener\ el\ estado\ del\ atributo\ nombre.\n\ @return\ retorna\ un\ objeto\ de\ tipo\ String.\n
numComments=20
