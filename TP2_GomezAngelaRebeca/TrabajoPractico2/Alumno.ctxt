#BlueJ class context
comment0.target=Alumno
comment0.text=\ \n\ @author\ Fernandez\ Alejandro\ Facundo\ -\ Gomez\ Rebeca\ \n\ Clase\ Alumno\ -\ Trabajo\ Practico\ 2\n
comment1.params=p_lu\ p_nombre\ p_apellido
comment1.target=Alumno(int,\ java.lang.String,\ java.lang.String)
comment1.text=\n\ Constructor\ con\ parametros,\ instancia\ un\ objeto\ de\ la\ clase.\n\ @param\ p_lu\n\ @param\ p_nombre\n\ @param\ p_apellido\n
comment10.params=
comment10.target=double\ getNota1()
comment10.text=\ \n\ Accesor\ Getter,\ permite\ obtener\ el\ estado\ del\ atributo\ nota1.\n\ @return\ retorna\ un\ tipo\ de\ dato\ coma\ flotante\ de\ doble\ precisi\u00F3n.\n
comment11.params=
comment11.target=double\ getNota2()
comment11.text=\ \n\ Accesor\ Getter,\ permite\ obtener\ el\ estado\ del\ atributo\ nota2.\n\ @return\ retorna\ un\ tipo\ de\ dato\ coma\ flotante\ de\ doble\ precisi\u00F3n.\n
comment12.params=
comment12.target=boolean\ aprueba()
comment12.text=\n\ M\u00E9todo\ privado,\ utiliza\ los\ m\u00E9todos\ promedio,\ getNota1\ y\ getNota2\ para\ comparar\ y\ evaluar\ condiciones\ \n\ establecidas,\ si\ se\ cumplen\ dichas\ condiciones\ el\ m\u00E9todo\ retorna\ true\ si\ no\ se\ cumplen\ retorna\ false.\n\ @return\ retorna\ un\ dato\ l\u00F3gico.\n
comment13.params=
comment13.target=java.lang.String\ leyendaAprueba()
comment13.text=\n\ M\u00E9todo\ privado,\ utiliza\ el\ m\u00E9todo\ aprueba\ y\ lo\ compara\ si\ la\ \n\ comparaci\u00F3n\ es\ verdadera\ el\ m\u00E9todo\ retorna\ la\ leyenda\ APROBADO,\ si\ la\ comparaci\u00F3n\ es\ falsa\n\ retorna\ la\ leyenda\ DESAPROBADO.\n\ @return\ retorna\ un\ objeto\ de\ tipo\ String.\n
comment14.params=
comment14.target=double\ promedio()
comment14.text=\n\ M\u00E9todo\ publico,\ utiliza\ los\ m\u00E9todos\ getNota1\ y\ getNota2\ para\ calcular\ el\ promedio,\ retornandolo\ directamente.\n\ C\u00E1lculo\ del\ promedio\ \=\ (nota1+nota2+...+notaN)/N.\n\ @return\ retorna\ un\ tipo\ de\ dato\ coma\ flotante\ de\ doble\ precisi\u00F3n.\n
comment15.params=
comment15.target=java.lang.String\ nomYApe()
comment15.text=\n\ M\u00E9todo\ publico,\ utiliza\ los\ m\u00E9todos\ getNombre\ y\ getApellido\ para\ formar\ una\ \u00FAnica\ cadena\ de\ texto\ \n\ concatenando\ los\ atributos\ nombre\ y\ apellido.\n\ @return\ retorna\ un\ objeto\ de\ tipo\ String.\n
comment16.params=
comment16.target=java.lang.String\ apeYNom()
comment16.text=\n\ M\u00E9todo\ publico,\ utiliza\ los\ m\u00E9todos\ getApellido\ y\ getNombre\ para\ formar\ una\ \u00FAnica\ cadena\ de\ texto\ \n\ concatenando\ los\ atributos\ apellido\ y\ nombre.\n\ @return\ retorna\ un\ objeto\ de\ tipo\ String.\n
comment17.params=
comment17.target=void\ mostrar()
comment17.text=\n\ M\u00E9todo\ publico,\ utiliza\ el\ m\u00E9todo\ nomYApe\ para\ formar\ una\ cadena\ de\ texto\ con\ su\ respectiva\ descripci\u00F3n\ \n\ junto\ al\ estado\ del\ objeto.\n\ Utiliza\ los\ m\u00E9todos\ getLU,\ getNota1\ y\ getNota2\ formar\ una\ cadena\ de\ texto\ con\ sus\ respectivas\ \n\ descripciones\ junto\ a\ los\ estados\ de\ los\ objetos.\n\ Utiliza\ los\ m\u00E9todos\ promedio\ y\ leyendaAprueba\ formar\ una\ cadena\ de\ texto\ con\ sus\ respectivas\ \n\ descripciones\ junto\ a\ los\ estados\ de\ los\ objetos.\n\ Emplea\ 3\ System.out.println\ para\ visualizar\ por\ consola\ las\ tres\ cadenas\ de\ texto.\n
comment2.params=p_lu
comment2.target=void\ setLu(int)
comment2.text=\n\ Mutador\ Setter,\ recibe\ un\ tipo\ de\ dato\ entero\ y\ permite\ modificar\ el\ estado\ del\ atributo\ lu.\ \n\ @param\ p_lu\n
comment3.params=p_nombre
comment3.target=void\ setNombre(java.lang.String)
comment3.text=\n\ Mutador\ Setter,\ recibe\ un\ objeto\ de\ tipo\ String\ y\ permite\ modificar\ el\ estado\ del\ atributo\ nombre.\n\ @param\ p_nombre\n
comment4.params=p_apellido
comment4.target=void\ setApellido(java.lang.String)
comment4.text=\n\ Mutador\ Setter,\ recibe\ un\ objeto\ de\ tipo\ String\ y\ permite\ modificar\ el\ estado\ del\ atributo\ apellido.\n\ @param\ p_apellido\n
comment5.params=p_nota1
comment5.target=void\ setNota1(double)
comment5.text=\n\ Mutador\ Setter,\ recibe\ un\ tipo\ de\ dato\ coma\ flotante\ de\ doble\ precisi\u00F3n\ y\ permite\ modificar\ el\ estado\ \n\ del\ atributo\ nota1.\ \n\ @param\ p_nota1\n
comment6.params=p_nota2
comment6.target=void\ setNota2(double)
comment6.text=\n\ Mutador\ Setter,\ recibe\ un\ tipo\ de\ dato\ coma\ flotante\ de\ doble\ precisi\u00F3n\ y\ permite\ modificar\ el\ estado\ \n\ del\ atributo\ nota2.\ \n\ @param\ p_nota2\n
comment7.params=
comment7.target=int\ getLu()
comment7.text=\ \n\ Accesor\ Getter,\ permite\ obtener\ el\ estado\ del\ atributo\ lu.\n\ @return\ retorna\ un\ tipo\ de\ dato\ entero.\n
comment8.params=
comment8.target=java.lang.String\ getNombre()
comment8.text=\n\ Accesor\ Getter,\ permite\ obtener\ el\ estado\ del\ atributo\ nombre.\n\ @return\ retorna\ un\ objeto\ de\ tipo\ String.\n
comment9.params=
comment9.target=java.lang.String\ getApellido()
comment9.text=\n\ Accesor\ Getter,\ permite\ obtener\ el\ estado\ del\ atributo\ apellido.\n\ @return\ retorna\ un\ objeto\ de\ tipo\ String.\n
numComments=18
