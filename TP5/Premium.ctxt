#BlueJ class context
comment0.target=Premium
comment0.text=\ \n\ @author\ Fernandez\ Alejandro\ Facundo\ -\ Gomez\ Rebeca\ \n\ Clase\ Premium\ -\ Trabajo\ Practico\ 5\n
comment1.params=p_costo\ p_colores
comment1.target=Premium(double,\ int)
comment1.text=\n\ Constructor\ que\ inicializa\ la\ etiqueta\ premium\ con\ un\ costo\n\ espec\u00EDfico\ y\ un\ n\u00FAmero\ de\ colores.\n\n\ @param\ p_costo\ Costo\ de\ la\ etiqueta.\n\ @param\ p_colores\ N\u00FAmero\ de\ colores\ de\ la\ etiqueta.\n
comment2.params=
comment2.target=int\ getColores()
comment2.text=\n\ Obtiene\ el\ n\u00FAmero\ de\ colores\ de\ la\ etiqueta\ premium.\n\n\ @return\ N\u00FAmero\ de\ colores.\n
comment3.params=p_colores
comment3.target=void\ setColores(int)
comment3.text=\n\ Establece\ el\ n\u00FAmero\ de\ colores\ de\ la\ etiqueta\ premium.\n\n\ @param\ p_colores\ N\u00FAmero\ de\ colores.\n
comment4.params=q
comment4.target=double\ precio(int)
comment4.text=\n\ Calcula\ el\ precio\ total\ de\ la\ etiqueta\ premium\ seg\u00FAn\ la\ cantidad\n\ solicitada,\ considerando\ un\ costo\ adicional\ basado\ en\ el\ n\u00FAmero\ de\ colores.\n\n\ @param\ q\ Cantidad\ de\ etiquetas.\n\ @return\ Precio\ total\ de\ las\ etiquetas.\n
comment5.params=
comment5.target=double\ adicional()
comment5.text=\n\ Calcula\ el\ costo\ adicional\ basado\ en\ el\ n\u00FAmero\ de\ colores.\n\n\ @return\ Costo\ adicional.\n
comment6.params=
comment6.target=java.lang.String\ tipo()
comment6.text=\n\ Devuelve\ el\ tipo\ de\ etiqueta\ como\ una\ cadena.\n\n\ @return\ Tipo\ de\ etiqueta.\n
comment7.params=
comment7.target=java.lang.String\ toString()
comment7.text=\n\ Devuelve\ una\ representaci\u00F3n\ en\ cadena\ de\ la\ etiqueta\ premium.\n\n\ @return\ String\ que\ describe\ la\ etiqueta\ premium.\n
numComments=8
